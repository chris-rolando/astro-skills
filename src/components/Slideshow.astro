---

interface SlideshowProps {
  images: string[]
}

const { images = [] } = Astro.props as SlideshowProps;
---

<section class="slideshow">
  <div class="slides" id="slide-container">
    {images.map((src, index) => (
      <img
        src={src}
        alt={`Slide ${index + 1}`}
        class="slide"
        style={index === 0 ? 'display: block' : 'display: none'}
      />
    ))}
  </div>
  <div class="controls">
    <button onclick="prevSlide()">⟨</button>
    <button onclick="nextSlide()">⟩</button>
  </div>
</section>

<script type="module">
  let currentSlide = 0;
  const slides = [];

  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('slide-container');
    slides.push(...container.querySelectorAll('.slide'));
    showSlide(currentSlide);
  });

  function showSlide(index) {
    slides.forEach((slide, i) => {
      slide.style.display = i === index ? 'block' : 'none';
    });
  }

  window.nextSlide = () => {
    currentSlide = (currentSlide + 1) % slides.length;
    showSlide(currentSlide);
  };

  window.prevSlide = () => {
    currentSlide = (currentSlide - 1 + slides.length) % slides.length;
    showSlide(currentSlide);
  };

  setInterval(nextSlide, 1000);
</script>

<style>
  .slideshow {
    position: relative;
    max-width: 600px;
    margin: auto;
    overflow: hidden;
  }

  .slides img {
    width: 100%;
    border-radius: 1rem;
  }

  .controls {
    text-align: center;
    margin-top: 1rem;
  }

  .controls button {
    background-color: #0077ff;
    color: white;
    border: none;
    font-size: 1.5rem;
    margin: 0 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .controls button:hover {
    background-color: #005ec2;
  }
</style>
